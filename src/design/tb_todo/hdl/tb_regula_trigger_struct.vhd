-- VHDL Entity tb_todo.tb_regula_trigger.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 08:45:47 22/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY tb_regula_trigger IS
   PORT( 
      trigger_out : OUT    std_logic
   );

-- Declarations

END tb_regula_trigger ;

--
-- VHDL Architecture tb_todo.tb_regula_trigger.struct
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 08:45:47 22/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY todo;

ARCHITECTURE struct OF tb_regula_trigger IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL clk        : std_logic;
   SIGNAL rst        : std_logic;
   SIGNAL trigger_in : std_logic;


   -- Component Declarations
   COMPONENT regula_trigger
   PORT (
      clk         : IN     std_logic ;
      rst         : IN     std_logic ;
      trigger_in  : IN     std_logic ;
      trigger_out : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : regula_trigger USE ENTITY todo.regula_trigger;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   p_clk : process
   begin
     clk <= '0';
     wait for 5 ns;
     clk <= '1';
     wait for 5 ns;
   end process p_clk;  
   
   p_rst:process
   begin
   rst<='0';
   wait for 40 ns;
   rst<='1';
   wait for 40ns;
   rst<='0';
   wait;
   end process;
   -- eb1 1                                        
   
   p_trigger_in:process
   begin
       trigger_in<='0';
       wait for 40 ns;
       trigger_in<='1';
       wait for 500 ns;
       trigger_in<='0';
       wait for 50 ns;
   end process;


   -- Instance port mappings.
   U_0 : regula_trigger
      PORT MAP (
         clk         => clk,
         rst         => rst,
         trigger_in  => trigger_in,
         trigger_out => trigger_out
      );

END struct;
