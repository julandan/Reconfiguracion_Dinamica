-- VHDL Entity tb_ROM.tb_roms_generador_control.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 08:46:08 15/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY tb_roms_generador_control IS
   PORT( 
      O    : OUT    std_logic_vector (31 DOWNTO 0);
      busy : OUT    std_logic
   );

-- Declarations

END tb_roms_generador_control ;

--
-- VHDL Architecture tb_ROM.tb_roms_generador_control.struct
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 15:42:56 18/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE IEEE.numeric_std.all;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
LIBRARY UNISIM;
USE UNISIM.VCOMPONENTS.ALL;
LIBRARY XilinxCoreLib;
USE XilinxCoreLib.all;
USE ieee.std_logic_arith.all;

LIBRARY FSM_dinamico_e;
LIBRARY FSM_dinamico_w;
LIBRARY todo;

ARCHITECTURE struct OF tb_roms_generador_control IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL activa_dinamico_reg : std_logic;
   SIGNAL activa_led_b        : std_logic;
   SIGNAL activa_led_e_b      : std_logic;
   SIGNAL activa_led_e_m      : std_logic;
   SIGNAL activa_led_w_m      : std_logic;
   SIGNAL clk                 : std_logic;
   SIGNAL enable_led_reg      : std_logic;
   SIGNAL reset_dinamico_reg  : std_logic;
   SIGNAL rst                 : std_logic;
   SIGNAL trigger_e           : std_logic;
   SIGNAL trigger_w           : std_logic;


   -- Component Declarations
   COMPONENT FSM_dinamico_e_dinamico
   PORT (
      activa_dinamico : IN     std_logic ;
      clk             : IN     std_logic ;
      reset_dinamico  : IN     std_logic ;
      rst             : IN     std_logic ;
      activa_led_e    : OUT    std_logic ;
      activa_led_w    : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT FSM_dinamico_w_dinamico
   PORT (
      activa_dinamico : IN     std_logic ;
      clk             : IN     std_logic ;
      reset_dinamico  : IN     std_logic ;
      rst             : IN     std_logic ;
      activa_led_e    : OUT    std_logic ;
      activa_led_w    : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT control_icap
   PORT (
      clk                 : IN     std_logic ;
      rst                 : IN     std_logic ;
      trigger_e           : IN     std_logic ;
      trigger_w           : IN     std_logic ;
      O                   : OUT    std_logic_vector (31 DOWNTO 0);
      activa_dinamico_reg : OUT    std_logic ;
      busy                : OUT    std_logic ;
      enable_led_reg      : OUT    std_logic ;
      reset_dinamico_reg  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : FSM_dinamico_e_dinamico USE ENTITY FSM_dinamico_e.FSM_dinamico_e_dinamico;
   FOR ALL : FSM_dinamico_w_dinamico USE ENTITY FSM_dinamico_w.FSM_dinamico_w_dinamico;
   FOR ALL : control_icap USE ENTITY todo.control_icap;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
                                      
   p_rst : process
   begin
     rst <= '0';
     wait for 100 ns;
     rst <= '1';
     wait for 250 ns;
     rst <= '0';
     wait;
   end process p_rst;    
   
   p_clk : process
   begin
     clk <= '0';
     wait for 10 ns;
     clk <= '1';
     wait for 10 ns;
   end process p_clk; 
   
   p_trigger: process
   begin
       trigger_w <='0';
       trigger_e <='0';
       wait for 500 ns;
       trigger_w <='1';
       wait for 50 ns;
       trigger_w <='0';
       wait for 226000 ns;
       trigger_e <='1';
       wait for 50 ns;
       trigger_e <='0';
       wait;
   end process p_trigger;
   
   
                                         
   
   
   
   
   
   
   
   
   
   


   -- Instance port mappings.
   U_1 : FSM_dinamico_e_dinamico
      PORT MAP (
         activa_dinamico => activa_dinamico_reg,
         clk             => clk,
         reset_dinamico  => reset_dinamico_reg,
         rst             => rst,
         activa_led_e    => activa_led_e_b,
         activa_led_w    => activa_led_w_m
      );
   U_0 : FSM_dinamico_w_dinamico
      PORT MAP (
         activa_dinamico => activa_dinamico_reg,
         clk             => clk,
         reset_dinamico  => reset_dinamico_reg,
         rst             => rst,
         activa_led_e    => activa_led_e_m,
         activa_led_w    => activa_led_b
      );
   i_control_icap : control_icap
      PORT MAP (
         clk                 => clk,
         rst                 => rst,
         trigger_e           => trigger_e,
         trigger_w           => trigger_w,
         O                   => O,
         activa_dinamico_reg => activa_dinamico_reg,
         busy                => busy,
         enable_led_reg      => enable_led_reg,
         reset_dinamico_reg  => reset_dinamico_reg
      );

END struct;
