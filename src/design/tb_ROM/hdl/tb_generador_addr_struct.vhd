-- VHDL Entity tb_ROM.tb_generador_addr.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 17:53:00 21/09/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY tb_generador_addr IS
   PORT( 
      dir : OUT    std_logic_vector (13 DOWNTO 0)
   );

-- Declarations

END tb_generador_addr ;

--
-- VHDL Architecture tb_ROM.tb_generador_addr.struct
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 18:03:45 21/09/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE IEEE.numeric_std.all;

LIBRARY ROM;

ARCHITECTURE struct OF tb_generador_addr IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL clk    : std_logic;
   SIGNAL enable : std_logic;
   SIGNAL fin    : std_logic;
   SIGNAL rst    : std_logic;


   -- Component Declarations
   COMPONENT generador_addr
   GENERIC (
      n : natural := 14
   );
   PORT (
      clk    : IN     std_logic;
      enable : IN     std_logic;
      fin    : IN     std_logic;
      rst    : IN     std_logic;
      dir    : OUT    std_logic_vector (n-1 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : generador_addr USE ENTITY ROM.generador_addr;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1                                        
   p_rst : process
   begin
     rst <= '0';
     wait for 100 ns;
     rst <= '1';
     wait for 250 ns;
     rst <= '0';
     wait;
   end process p_rst;    
   
   p_clk : process
   begin
     clk <= '0';
     wait for 10 ns;
     clk <= '1';
     wait for 10 ns;
   end process p_clk; 
   
   p_enable: process
   begin
       enable <='0';
       wait for 300 ns;
       enable <='1';
       wait for 300 ns;
       enable <='0';
       wait for 300 ns;
       enable <='1';
       wait for 300 ns;
   end process p_enable;
   
   p_fin:process
   begin
       fin<='0';
       wait for 1100 ns;
       fin<='1';
       wait for 50 ns;
       fin<='0';
       wait for 1100 ns;
       fin<='1';
       wait for 50 ns;
       fin<='0';
   end process p_fin;


   -- Instance port mappings.
   i_generador_addr : generador_addr
      GENERIC MAP (
         n => 14
      )
      PORT MAP (
         clk    => clk,
         rst    => rst,
         enable => enable,
         fin    => fin,
         dir    => dir
      );

END struct;
