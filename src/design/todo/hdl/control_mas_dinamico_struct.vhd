-- VHDL Entity todo.control_mas_dinamico.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 13:18:55 14/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY control_mas_dinamico IS
   PORT( 
      SYSCLK_N   : IN     std_logic;
      SYSCLK_P   : IN     std_logic;
      rst        : IN     std_logic;
      start      : IN     std_logic;
      GPIO_LED_E : OUT    std_logic;
      GPIO_LED_N : OUT    std_logic;
      GPIO_LED_W : OUT    std_logic;
      O          : OUT    std_logic_vector (31 DOWNTO 0);
      busy       : OUT    std_logic
   );

-- Declarations

END control_mas_dinamico ;

--
-- VHDL Architecture todo.control_mas_dinamico.struct
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 13:18:55 14/10/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.1b (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE ieee.std_logic_arith.all;

LIBRARY FSM_dinamico_w;
LIBRARY FSM_estatico;
LIBRARY todo;

ARCHITECTURE struct OF control_mas_dinamico IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL LOCKED          : std_logic;
   SIGNAL activa_dinamico : std_logic;
   SIGNAL activa_led_e    : std_logic;
   SIGNAL activa_led_w    : std_logic;
   SIGNAL clk_125         : std_logic;
   SIGNAL clk_200         : std_logic;
   SIGNAL enable_led      : std_logic;
   SIGNAL reset_dinamico  : std_logic;
   SIGNAL start_deb       : std_logic;
   SIGNAL trigger_e       : std_logic;
   SIGNAL trigger_w       : std_logic;


   -- Component Declarations
   COMPONENT FSM_dinamico_w_dinamico
   PORT (
      activa_dinamico : IN     std_logic ;
      clk             : IN     std_logic ;
      reset_dinamico  : IN     std_logic ;
      rst             : IN     std_logic ;
      activa_led_e    : OUT    std_logic ;
      activa_led_w    : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT FSM_estatico
   PORT (
      clk          : IN     std_logic ;
      rst          : IN     std_logic ;
      start        : IN     std_logic ;
      activa_led_n : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT CLK_DV_TO_SE
   PORT (
      CLK_IN1_N : IN     std_logic;
      CLK_IN1_P : IN     std_logic;
      RESET     : IN     std_logic;
      CLK_OUT1  : OUT    std_logic;
      CLK_OUT2  : OUT    std_logic;
      LOCKED    : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT DBounce
   PORT (
      button_in : IN     std_logic;
      clk       : IN     std_logic;
      rst       : IN     std_logic;
      DB_out    : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT control_icap
   PORT (
      clk                 : IN     std_logic ;
      rst                 : IN     std_logic ;
      trigger_e           : IN     std_logic ;
      trigger_w           : IN     std_logic ;
      O                   : OUT    std_logic_vector (31 DOWNTO 0);
      activa_dinamico_reg : OUT    std_logic ;
      busy                : OUT    std_logic ;
      enable_led_reg      : OUT    std_logic ;
      reset_dinamico_reg  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT genera_trigger
   PORT (
      clk       : IN     std_logic ;
      rst       : IN     std_logic ;
      trigger_e : OUT    std_logic ;
      trigger_w : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT registro_en
   PORT (
      clk    : IN     std_logic;
      d      : IN     std_logic;
      enable : IN     std_logic;
      rst    : IN     std_logic;
      q      : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : CLK_DV_TO_SE USE ENTITY todo.CLK_DV_TO_SE;
   FOR ALL : DBounce USE ENTITY todo.DBounce;
   FOR ALL : FSM_dinamico_w_dinamico USE ENTITY FSM_dinamico_w.FSM_dinamico_w_dinamico;
   FOR ALL : FSM_estatico USE ENTITY FSM_estatico.FSM_estatico;
   FOR ALL : control_icap USE ENTITY todo.control_icap;
   FOR ALL : genera_trigger USE ENTITY todo.genera_trigger;
   FOR ALL : registro_en USE ENTITY todo.registro_en;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : FSM_dinamico_w_dinamico
      PORT MAP (
         activa_dinamico => activa_dinamico,
         clk             => clk_125,
         reset_dinamico  => reset_dinamico,
         rst             => rst,
         activa_led_e    => activa_led_e,
         activa_led_w    => activa_led_w
      );
   i_FSM_estatico : FSM_estatico
      PORT MAP (
         clk          => clk_125,
         rst          => rst,
         start        => start_deb,
         activa_led_n => GPIO_LED_N
      );
   i_CLK_DV_TO_SE : CLK_DV_TO_SE
      PORT MAP (
         CLK_IN1_P => SYSCLK_P,
         CLK_IN1_N => SYSCLK_N,
         CLK_OUT1  => clk_200,
         CLK_OUT2  => clk_125,
         RESET     => rst,
         LOCKED    => LOCKED
      );
   i_start_deb : DBounce
      PORT MAP (
         clk       => clk_125,
         rst       => rst,
         button_in => start,
         DB_out    => start_deb
      );
   i_control_icap : control_icap
      PORT MAP (
         clk                 => clk_125,
         rst                 => rst,
         trigger_e           => trigger_e,
         trigger_w           => trigger_w,
         O                   => O,
         activa_dinamico_reg => activa_dinamico,
         busy                => busy,
         enable_led_reg      => enable_led,
         reset_dinamico_reg  => reset_dinamico
      );
   i_genera_trigger : genera_trigger
      PORT MAP (
         clk       => clk_125,
         rst       => rst,
         trigger_e => trigger_e,
         trigger_w => trigger_w
      );
   i_reg_led_e : registro_en
      PORT MAP (
         clk    => clk_125,
         rst    => rst,
         d      => activa_led_e,
         enable => enable_led,
         q      => GPIO_LED_E
      );
   i_reg_led_w : registro_en
      PORT MAP (
         clk    => clk_125,
         rst    => rst,
         d      => activa_led_w,
         enable => enable_led,
         q      => GPIO_LED_W
      );

END struct;
